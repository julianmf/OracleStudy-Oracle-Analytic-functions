select department_id , count(employee_id) emp_count 
FROM
employees
group by department_id
order by department_id ;

select * from EMPLOYEES
where department_id is null;

select department_id , count(employee_id) emp_count 
FROM
employees
where department_id is not null
group by department_id
order by department_id ;

select to_char(department_id ) , count(employee_id) emp_count 
FROM
employees
where department_id is not null
group by department_id
union all
select 'Grand Total' , count(employee_id) emp_count
from EMPLOYEES
where department_id is not null

--ROLLUP is an extension of the GROUP BY clause.
--Use the ROLLUP operation to produce cumulative aggregates, such as Grandtotals & subtotals.
/*
The ROLLUP operator creates groupings by moving in one direction, 
from right to left, along the list
of columns specified in the GROUP BY clause. 
It then applies the aggregate function to these groupings.
*/

select department_id , count(employee_id) emp_count 
FROM
employees
where department_id is not null
group by ROLLUP (department_id )
order by department_id ;

select department_id , sum(salary) sum_sal
FROM
employees
where department_id is not null
group by ROLLUP (department_id )
order by department_id ;

--very important to know 
select department_id , avg(salary) avg_sal
FROM
employees
where department_id is not null
group by ROLLUP (department_id )
order by department_id ;

select  avg(salary) avg_sal
FROM
employees
where department_id is not null


#########
select department_id ,job_id, count(employee_id) emp_count 
FROM
employees
where department_id is not null
group by  department_id ,job_id 
order by department_id ;
--take the results on excel Rollup_desc.xls

--without ROLLUP
select department_id ,job_id, count(employee_id) emp_count 
FROM
employees
where department_id is not null
group by  department_id ,job_id 
    union all
select department_id , null job_id, count(employee_id) emp_count 
FROM
employees
where department_id is not null
group by  department_id 
    union all
select null department_id , null job_id, count(employee_id) emp_count 
FROM
employees
where department_id is not null
order by department_id ,job_id

--with ROLLUP
select department_id ,job_id, count(employee_id) emp_count 
FROM
employees
where department_id is not null
group by ROLLUP (department_id ,job_id) 


select department_id ,job_id, sum(salary) sum_sal 
FROM
employees
where department_id is not null
group by ROLLUP (department_id ,job_id) 

#######
/*
drop table info_sales;

create table info_sales
( trans_id number primary key,
  region varchar2(100),
  country varchar2(100), 
  city  varchar2(100),
  amount number
);

insert into info_sales values (1,'Asia','UAE','Abu Dhabi',400) ;
insert into info_sales values (2,'Asia','UAE','Abu Dhabi',600) ;
insert into info_sales values (3,'Asia','UAE','Duabi',300) ;
insert into info_sales values (4,'Asia','UAE','Duabi',120) ;
insert into info_sales values (5,'Africa','Egypt','Cairo',309) ;
insert into info_sales values (6,'Africa','Egypt','Cairo',123) ;
insert into info_sales values (7,'Europe','Spain','Madrid',109) ;
insert into info_sales values (8,'Europe','Spain','Madrid',153) ;
insert into info_sales values (9,'Europe','Spain','Barcelona',193) ;
insert into info_sales values (10,'Asia','Jordan','Amman',300) ;
insert into info_sales values (11,'Asia','Jordan','Zarqa',120) ;
commit;
*/

select * from info_sales

select region, country,city, sum(amount) 
from info_sales
group by region, country,city

select region, country,city, sum(amount) 
from info_sales
group by  rollup (region, country,city )
